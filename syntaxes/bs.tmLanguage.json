{
    "version": "0.1",
    "name": "Beanstalk",
    "scopeName": "source.bs",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#scenes"
        },
        {
            "include": "#types"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#assignment"
        },
        {
            "include": "#operator"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#control-statement"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#choices"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#lib-functions"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.bs",
                    "match": "--(?!-)[^\n]*"
                },
                {
                    "name": "comment.block.bs",
                    "begin": "---+",
                    "end": "---+"
                }
            ]
        },
        "scenes": {
            "patterns": [
                {
                    "name": "entity.name.tag.scene.bs",
                    "begin": "\\[",
                    "end": "\\]",
                    "patterns": [
                        {
                            "include": "#code-blocks"
                        },
                        {
                            "name": "keyword.declaration.tag.bs",
                            "end": ":",
                            "patterns": [
                                {
                                    "name": "entity.name.tag.scene.body.bs",
                                    "begin": ":",
                                    "end": "(?=\\])",
                                    "patterns": [
                                        {
                                            "name": "meta.paragraph.markdown",
                                            "begin": "(?<=:)",
                                            "end": "(?=\\])",
                                            "patterns": [
                                                {
                                                    "include": "#scenes",
                                                    "begin": "\\["
                                                },
                                                {
                                                    "name": "punctuation.definition.heading.markdown",
                                                    "match": "^\\s*#+\\s.*"
                                                },
                                                {
                                                    "include": "#numbers"
                                                },
                                                {
                                                    "name": "punctuation.definition.bold.markdown",
                                                    "match": "\\*\\*[^\\*]+\\*\\*"
                                                },
                                                {
                                                    "name": "punctuation.definition.italic.markdown",
                                                    "match": "\\*[^\\*]+\\*"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "include": "#comments"
                                },
                                {
                                    "include": "#types"
                                },
                                {
                                    "include": "#strings"
                                },
                                {
                                    "include": "#assignment"
                                },
                                {
                                    "include": "#operator"
                                },
                                {
                                    "include": "#numbers"
                                },
                                {
                                    "include": "#control-statement"
                                },
                                {
                                    "include": "#punctuation"
                                },
                                {
                                    "include": "#choices"
                                },
                                {
                                    "include": "#variables"
                                },
                                {
                                    "include": "#scene-tags"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.bs",
                    "match": "\\b(?:bool|int|float|string|idx|scene|choice)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.bs",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.bs",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "assignment": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment",
                    "match": "=|:"
                }
            ]
        },
        "operator": {
            "patterns": [
                {
                    "name": "keyword.operator.bs",
                    "match": "\\b(?:and|or|not|is|in|to|it|<=|>=|<|>|\\+|\\-|\\*|\\/|\\%|\\^)\\b"
                }
            ]
        },
        "choices": {
            "patterns": [
                {
                    "comment": "ALL CAPS constants",
                    "name": "constant.other.caps.bs",
                    "match": "\\b[A-Z]{2}[A-Z0-9_]*\\b"
                },
                {
                    "comment": "booleans",
                    "name": "constant.language.bool.bs",
                    "match": "\\b(true|false)\\b"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.bs",
                    "match": "\\b(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?\\b"
                }
            ]
        },
        "control-statement": {
            "patterns": [
                {
                    "name": "keyword.control.bs",
                    "match": "\\b(?:if|else|loop|return|end|continue)\\b"
                }
            ]
        },
        "punctuation": {
			"patterns": [
				{
					"comment": "comma",
					"name": "punctuation.comma.bs",
					"match": ","
				},
				{
					"comment": "curly braces",
					"name": "punctuation.brackets.curly.bs",
					"match": "[{}]"
				},
				{
					"comment": "parentheses, round brackets",
					"name": "punctuation.brackets.round.bs",
					"match": "[()]"
				},
				{
					"comment": "semicolon",
					"name": "punctuation.semi.bs",
					"match": ";"
				},
				{
					"comment": "square brackets",
					"name": "punctuation.brackets.square.bs",
					"match": "[\\[\\]]"
				},
				{
					"comment": "angle brackets",
					"name": "punctuation.brackets.angle.bs",
					"match": "(?<!=)[<>]"
				},
                {
                    "comment": "export symbol '@'",
                    "name": "punctuation.export.bs",
                    "match": "@"
                }
			]
		},
        "variables": {
			"patterns": [
				{
					"comment": "variables",
					"name": "variable.other.bs",
					"match": "\\b(?<!(?<!\\.)\\.)(?:r#)?[a-z0-9_]+\\b"
				}
			]
		},
        "scene-tags" : {
            "patterns": [
                {
                    "name": "variable.language.tag.bs",
                    "match": "\\b(?<!(?<!\\.)\\.)(?:r#)?[a-z0-9_]+\\b"
                }
            ]
        },
        "lib-functions" : {
            "patterns": [
                {
                    "name": "support.function.bs",
                    "match": "\\b(?:print|import|rng)\\b"
                }
            ]
        },
        "code-blocks" : {
            "patterns": [
                {
                    "name": "source.bs",
                    "begin": "code.*?:",
                    "end": "(?=\\])",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#types"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#scenes"
                        },
                        {
                            "include": "#assignment"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "#numbers"
                        },
                        {
                            "include": "#control-statement"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#choices"
                        },
                        {
                            "include": "#variables"
                        },
                        {
                            "include": "#lib-functions"
                        }
                    ]
                }
            ]
        }
    }
}